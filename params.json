{"name":"Ail-framework","tagline":"AIL framework - Analysis Information Leak framework","body":"AIL\r\n===\r\n\r\nAIL framework - Analysis Information Leak framework\r\n\r\nAIL is a modular framework to analyse potential information leak from unstructured data source like pastes from Pastebin or similar services. AIL framework is flexible and can be extended to support other functionalities to mine sensitive information.\r\n\r\n![Dashboard](./doc/screenshots/DashboardAIL.png?raw=true \"AIL framework dashboard\")\r\n![Trending](./doc/screenshots/WordtrendingAIL.png?raw=true \"AIL framework wordtrending\")\r\n\r\nRequirements & Installation\r\n---------------------------\r\n\r\nObviously:\r\n``sudo apt-get install python2.7``\r\n\r\nBut also pip, virtualenv and screen.\r\n```\r\nsudo apt-get install python-pip\r\nsudo pip install virtualenv\r\nsudo apt-get install screen\r\n```\r\n\r\nYou need to create a variable AILENV that will be the installation path:\r\n\r\n``export AILENV=\"/home/user/ail\"``\r\n\r\nThen create a Python virtual environment:\r\n\r\n``virtualenv AILENV``\r\n\r\nAnd install these few more packets:\r\n```\r\nsudo apt-get install g++\r\nsudo apt-get install python-dev\r\nsudo apt-get install python-tk\r\nsudo apt-get install screen\r\n```\r\n\r\nThen these modules need to be install with pip inside the virtual environment:\r\n(Activating virtualenv)\r\n```\r\n. ./AILENV/bin/activate\r\n```\r\n\r\nYou'll need to clone langid:\r\n[https://github.com/saffsd/langid.py] \r\nAnd install it: \r\n```\r\npython setup.py install\r\n```\r\n\r\nThat's all the packages you can install with pip:\r\n\r\n```\r\npip install redis\r\npip install networkx\r\npip install crcmod\r\npip install mmh3\r\npip install dnspython\r\npip install pyzmq\r\npip install texttable ----- Queues Monitoring (Optional)\r\npip install -U textblob\r\npython -m textblob.download_corpora\r\npip install python-magic\r\npip install numpy\r\npip install flask ----- (Optional)\r\npip install nltk\r\npip install matplotlib ----- (sudo ln -s freetype2/ft2build.h in /usr/include/)\r\npip install pybloomfiltermmap ----- (you may need to sudo apt-get install libssl-dev)\r\n```\r\n\r\nInstalling Redis & Level DB\r\n---------------------------\r\n\r\nAssuming that you install everything under /opt/ with adequate permissions:\r\n\r\n```\r\nwget http://download.redis.io/releases/redis-2.8.12.tar.gz\r\ntar -xvf redis-2.8.12.tar.gz -C /opt/\r\n```\r\nAnd follow the README after extraction.\r\n\r\nWhen redis is properly installed you can edit your own config files for\r\nthe different required databases or just take the config from the project\r\nlocated under ``/config/``\r\n\r\n```\r\ngit clone https://github.com/KDr2/redis-leveldb.git\r\n```\r\nFollow the redis-leveldb README.\r\n\r\nThen create these directories\r\n\r\n```\r\ncd $AILENV\r\n\tmkdir PASTES\r\n\tmkdir Blooms\r\n\tmkdir dumps\r\n\r\nmkdir LEVEL_DB_DATA\r\ncd LEVEL_DB_DATA/\r\n\tmkdir 2014\r\n\tmkdir 2013\r\n```\r\n\r\nStarting AIL\r\n------------\r\n\r\nIf you installed all the requirements described above, you should be able to start AIL framework:\r\n\r\n```\r\ncd $AILENV\r\ncd bin\r\n./LAUNCH.sh\r\n```\r\n\r\nThen you can browse the status of the AIL framework at the following URL:\r\n\r\n        ``http://localhost:7000/``\r\n\r\nCreate a new module\r\n-------------------\r\n\r\nAssuming you already download the project and configure everything:\r\n\r\n* Redis databases [http://redis.io/]\r\n* Redis Level DB [https://github.com/KDr2/redis-leveldb]\r\n\r\nThis module will be recover from a stream all the Tor .onion addresses:\r\n\"http://3g2upl4pq6kufc4m.onion/\" Which look like this.\r\n\r\nBasically we want to match all paste in with ``.onion`` addresses inside.\r\n\r\nFor that you can already use the module ``ZMQ_PubSub_Categ`` and just\r\ncreate your own category file in: ``/file/`` here it will be ``/file/onion_categ``.\r\n\r\nYou need also to link this file inside another file (list_categ_files).\r\n\r\nInside the file \"onion_categ\", you will add the word \"onion\" (don't forget the carriage return).\r\n\r\nOnce it's done, at the launch of the AIL framework, every paste with the word onion inside them\r\nwill be forwarded on a specific channel (onion_categ).\r\n\r\nThen what you want to do it's recovering these pastes to extract these .onion addresses.\r\n\r\nTo do that, you'll need to create 2 scripts:\r\n\t``ZMQ_Sub_Onion_Q.py`` (Redis bufferizing)\r\n\t``ZMQ_Sub_Onion.py`` (The extraction)\r\n\r\nThose two files are there as an example.\r\n\r\nOverview\r\n--------\r\n\r\nHere is a \"chained tree\" to show how all ZMQ Modules are linked and how the informations \r\n(mainly the paste) is going through them.\r\n\r\nThe onion module is interfaced at top down level of this tree (like the ZMQ_Sub_Urls module).\r\n\r\nAll modules that you want to create using the \"tokenization method\" and the \"categories system\" need to be created at this level.\r\n\r\nIf you want to create a general module (e.g. using all pastes), this module need to be created at the same level than ZMQ_Sub_Duplicate.\r\n\r\n![ZMQTree](./doc/dia/ZMQ_Queuing_Tree.jpg?raw=true \"ZMQ Tree\")\r\n\r\nLICENSE\r\n-------\r\n\r\n```\r\n    Copyright (C) 2014 Jules Debra\r\n    Copyright (C) 2014 CIRCL - Computer Incident Response Center Luxembourg (â„… smile gie)\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU Affero General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU Affero General Public License for more details.\r\n\r\n    You should have received a copy of the GNU Affero General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}